{
  "contractName": "ProofUtils",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"AZTEC Copyright Spilbury Holdings Ltd 2019. All rights reserved.*\",\"methods\":{},\"title\":\"Library of proof utility functions\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@aztec/protocol/contracts/libs/ProofUtils.sol\":\"ProofUtils\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@aztec/protocol/contracts/libs/ProofUtils.sol\":{\"keccak256\":\"0xd18171e4b3e0047b714e75f9bf0ca6a72e3e684b81754796dde16dca57f1dd14\",\"urls\":[\"bzzr://fc96e2fa6e5f63a2db03b484dcbb093bb6c871026a19f68eede226285896c6fe\"]}},\"version\":1}",
  "bytecode": "0x604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820aa9976a5e66ff32a98f04fedd5891946243b2d8532b84f771d82bd9b21f05de90029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820aa9976a5e66ff32a98f04fedd5891946243b2d8532b84f771d82bd9b21f05de90029",
  "sourceMap": "167:640:31:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24",
  "deployedSourceMap": "167:640:31:-;;;;;;;;",
  "source": "pragma solidity >= 0.5.0 <0.6.0;\n\n/**\n * @title Library of proof utility functions\n * @author AZTEC\n * Copyright Spilbury Holdings Ltd 2019. All rights reserved.\n **/\nlibrary ProofUtils {\n\n    /**\n     * @dev We compress three uint8 numbers into only one uint24 to save gas.\n     * Reverts if the category is not one of [1, 2, 3, 4].\n     * @param proof The compressed uint24 number.\n     * @return A tuple (uint8, uint8, uint8) representing the epoch, category and proofId.\n     */\n    function getProofComponents(uint24 proof) internal pure returns (uint8 epoch, uint8 category, uint8 id) {\n        assembly {\n            id := and(proof, 0xff)\n            category := and(div(proof, 0x100), 0xff)\n            epoch := and(div(proof, 0x10000), 0xff)\n        }\n        return (epoch, category, id);\n    }\n}\n",
  "sourcePath": "@aztec/protocol/contracts/libs/ProofUtils.sol",
  "ast": {
    "absolutePath": "@aztec/protocol/contracts/libs/ProofUtils.sol",
    "exportedSymbols": {
      "ProofUtils": [
        4786
      ]
    },
    "id": 4787,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4767,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:31"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Library of proof utility functions\n@author AZTEC\nCopyright Spilbury Holdings Ltd 2019. All rights reserved.*",
        "fullyImplemented": true,
        "id": 4786,
        "linearizedBaseContracts": [
          4786
        ],
        "name": "ProofUtils",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4784,
              "nodeType": "Block",
              "src": "591:214:31",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "id": {
                        "declaration": 4776,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "624:2:31",
                        "valueSize": 1
                      }
                    },
                    {
                      "category": {
                        "declaration": 4774,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "659:8:31",
                        "valueSize": 1
                      }
                    },
                    {
                      "epoch": {
                        "declaration": 4772,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "712:5:31",
                        "valueSize": 1
                      }
                    },
                    {
                      "proof": {
                        "declaration": 4769,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "634:5:31",
                        "valueSize": 1
                      }
                    },
                    {
                      "proof": {
                        "declaration": 4769,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "679:5:31",
                        "valueSize": 1
                      }
                    },
                    {
                      "proof": {
                        "declaration": 4769,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "729:5:31",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 4778,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    id := and(proof, 0xff)\n    category := and(div(proof, 0x100), 0xff)\n    epoch := and(div(proof, 0x10000), 0xff)\n}",
                  "src": "601:175:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 4779,
                        "name": "epoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4772,
                        "src": "778:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4780,
                        "name": "category",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4774,
                        "src": "785:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4781,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4776,
                        "src": "795:2:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 4782,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "777:21:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 4777,
                  "id": 4783,
                  "nodeType": "Return",
                  "src": "770:28:31"
                }
              ]
            },
            "documentation": "@dev We compress three uint8 numbers into only one uint24 to save gas.\nReverts if the category is not one of [1, 2, 3, 4].\n@param proof The compressed uint24 number.\n@return A tuple (uint8, uint8, uint8) representing the epoch, category and proofId.",
            "id": 4785,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProofComponents",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4769,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 4785,
                  "src": "515:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 4768,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "515:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "514:14:31"
            },
            "returnParameters": {
              "id": 4777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4772,
                  "name": "epoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 4785,
                  "src": "552:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4771,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4774,
                  "name": "category",
                  "nodeType": "VariableDeclaration",
                  "scope": 4785,
                  "src": "565:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4773,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4776,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 4785,
                  "src": "581:8:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4775,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "581:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "551:39:31"
            },
            "scope": 4786,
            "src": "487:318:31",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 4787,
        "src": "167:640:31"
      }
    ],
    "src": "0:808:31"
  },
  "legacyAST": {
    "absolutePath": "@aztec/protocol/contracts/libs/ProofUtils.sol",
    "exportedSymbols": {
      "ProofUtils": [
        4786
      ]
    },
    "id": 4787,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4767,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:31"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Library of proof utility functions\n@author AZTEC\nCopyright Spilbury Holdings Ltd 2019. All rights reserved.*",
        "fullyImplemented": true,
        "id": 4786,
        "linearizedBaseContracts": [
          4786
        ],
        "name": "ProofUtils",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4784,
              "nodeType": "Block",
              "src": "591:214:31",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "id": {
                        "declaration": 4776,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "624:2:31",
                        "valueSize": 1
                      }
                    },
                    {
                      "category": {
                        "declaration": 4774,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "659:8:31",
                        "valueSize": 1
                      }
                    },
                    {
                      "epoch": {
                        "declaration": 4772,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "712:5:31",
                        "valueSize": 1
                      }
                    },
                    {
                      "proof": {
                        "declaration": 4769,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "634:5:31",
                        "valueSize": 1
                      }
                    },
                    {
                      "proof": {
                        "declaration": 4769,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "679:5:31",
                        "valueSize": 1
                      }
                    },
                    {
                      "proof": {
                        "declaration": 4769,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "729:5:31",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 4778,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    id := and(proof, 0xff)\n    category := and(div(proof, 0x100), 0xff)\n    epoch := and(div(proof, 0x10000), 0xff)\n}",
                  "src": "601:175:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 4779,
                        "name": "epoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4772,
                        "src": "778:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4780,
                        "name": "category",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4774,
                        "src": "785:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4781,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4776,
                        "src": "795:2:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 4782,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "777:21:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 4777,
                  "id": 4783,
                  "nodeType": "Return",
                  "src": "770:28:31"
                }
              ]
            },
            "documentation": "@dev We compress three uint8 numbers into only one uint24 to save gas.\nReverts if the category is not one of [1, 2, 3, 4].\n@param proof The compressed uint24 number.\n@return A tuple (uint8, uint8, uint8) representing the epoch, category and proofId.",
            "id": 4785,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProofComponents",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4769,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 4785,
                  "src": "515:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 4768,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "515:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "514:14:31"
            },
            "returnParameters": {
              "id": 4777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4772,
                  "name": "epoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 4785,
                  "src": "552:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4771,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4774,
                  "name": "category",
                  "nodeType": "VariableDeclaration",
                  "scope": 4785,
                  "src": "565:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4773,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4776,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 4785,
                  "src": "581:8:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4775,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "581:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "551:39:31"
            },
            "scope": 4786,
            "src": "487:318:31",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 4787,
        "src": "167:640:31"
      }
    ],
    "src": "0:808:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2021-09-17T17:40:15.207Z",
  "devdoc": {
    "author": "AZTEC Copyright Spilbury Holdings Ltd 2019. All rights reserved.*",
    "methods": {},
    "title": "Library of proof utility functions"
  },
  "userdoc": {
    "methods": {}
  }
}